/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState, useEffect } from 'react';
import { useFrame, useThree } from '@react-three/fiber';
import * as THREE from 'three';
import useMouseCoordinates from '../../../hooks/mouseCoordinates';
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
    const { x, y } = useMouseCoordinates();
    const group = useRef()
	const phoneWireframe = useRef()
    const tabletWireframe = useRef()
    const computerWireframe = useRef()
	const {viewport} = useThree();
    const { nodes, materials } = useGLTF(`${process.env.PUBLIC_URL}/home.glb`)
	const [hovered, setHover] = useState(false)
    useFrame(() => {
        group.current.rotation.y = Math.PI * 1.4 + x * 0.5;
        group.current.rotation.x = -y * 0.2;
        phoneWireframe.current.position.x = THREE.MathUtils.lerp(phoneWireframe.current.position.x, hovered ? 3.2 : 0.2, 0.1);
		tabletWireframe.current.position.x = THREE.MathUtils.lerp(tabletWireframe.current.position.x, hovered ? 3.5 : 1, 0.1);
        computerWireframe.current.position.x = THREE.MathUtils.lerp(computerWireframe.current.position.x, hovered ? 3.39 : 1.39, 0.1);
    })
useEffect(() => {
	console.log("here")
}, [])

	return (
		<group ref={group} {...props} rotation={[0, 0, 0.2]}
		position={[ viewport.width / 8 + 2, - 3, 0]}
		onPointerOver={() => setHover(true)}
		onPointerOut={() => setHover(false)}>
			<group position={[3.75, 1.31, 3.44]}>
				<mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} />
				<mesh geometry={nodes.Cube002_1.geometry} material={nodes.Cube002_1.material} />
			</group>
			<group position={[5.24, 4.32, -2.4]}>
				<mesh geometry={nodes.Cylinder.geometry} material={materials.pencil_ext_black} />
				<mesh geometry={nodes.Cylinder_1.geometry} material={materials.pencil_ext_yellow} />
				<mesh geometry={nodes.Cylinder_2.geometry} material={materials.pencil_wood} />
				<mesh geometry={nodes.Cylinder_3.geometry} material={materials.pencil_graphite} />
				<mesh geometry={nodes.Cylinder_4.geometry} material={materials.pencil_eraser} />
				<mesh geometry={nodes.Cylinder_5.geometry} material={materials.pencil_metal} />
			</group>
			<group position={[0, 4.57, 0]}>
				<mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} />
				<mesh geometry={nodes.Cube003_1.geometry} material={nodes.Cube003_1.material} />
			</group>
			<group position={[2.59, 2.35, 5.05]}>
				<mesh geometry={nodes.Cube004.geometry} material={nodes.Cube004.material} />
				<mesh geometry={nodes.Cube004_1.geometry} material={nodes.Cube004_1.material} />
			</group>
			<mesh
			ref={computerWireframe}
			geometry={nodes.computer_wireframe.geometry}
			material={nodes.computer_wireframe.material}
			position={[1.39, 0.31, 0.22]}
			/>
			<mesh
			ref={tabletWireframe}
			geometry={nodes.tablet_wireframe.geometry}
			material={nodes.tablet_wireframe.material}
			position={[1, 0.34, 0]}
			/>
			<mesh 
			ref={phoneWireframe}
			geometry={nodes.phone_wireframe.geometry} 
			material={nodes.phone_wireframe.material} 
			position={[0.2, 0, 0]}/>
		</group>
	)
}

useGLTF.preload(`${process.env.PUBLIC_URL}/home.glb`)
